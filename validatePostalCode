// Code in the main to validate the entered postal code and corresponding city with the validatePostalCode method
validatePC = validatePostalCode(customerInfo[4], customerInfo[3], customerInfo);
if (validatePC == true) {
    System.out.println(customerInfo[4] + " is a valid postal code for " + customerInfo[3]);
} else {
  System.out.println(customerInfo[4] + " is not a valid postal code for " + customerInfo[3]);
}

/**
     * Compare the customer's postal code and city with a document of Canadian postal codes and cities to ensure they are valid
     * @author              Catherine Yu
     * @param postalCode    The customer's postal code
     * @param city          The customer's city
     * @param info          The populated array containing the customer's information
     * @return              A boolean value of whether the postal code and city are valid or not
     * @throws FileNotFoundException
     */
    public static boolean validatePostalCode(String postalCode, String city, String[] info) throws FileNotFoundException {
        // Create a file and a BufferedReader that uses a FileReader to read the file
        // A BufferedReader is used instead of Scanner as the Scanner has a limit to the number of lines it can read
        String fileName = "postal_codes.csv";
        File readFile = new File(fileName);
        BufferedReader bufferedreader = new BufferedReader(new FileReader(readFile));
        // Declare and initialize variables
        boolean validatePC = true;
        String line; 
        // Create an array that splits the first three digits of the postal code from the other digits
        String[] firstThree = postalCode.split(" ");
    
        // Validate the length of the postal code
        if (postalCode.length() < 3) {
            validatePC = false;
        // If the postal code has more than three characters, continue validating
        } else {
            try {
                // Loops until there are no more lines to read
                while ((line = bufferedreader.readLine()) != null) {
                    // The postal code and city are valid if they appear in the same line
                    if ((line.contains(firstThree[0] + "|")) && (line.contains(city))) {
                        validatePC = true;
                        // Break the loop once the postal code is validated
                        break;
                    } else {
                        // Otherwise the postal code and/or city are not valid
                        validatePC = false;
                    }
                }
            // Catch any exceptions
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        // Return whether the postal code and city are valid or not
        return validatePC;
    }
